// Code generated by MockGen. DO NOT EDIT.
// Source: ../../internal/api/v1/controller/notification/notification_controller.go

// Package notification is a generated GoMock package.
package notification

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockINotificationController is a mock of INotificationController interface.
type MockINotificationController struct {
	ctrl     *gomock.Controller
	recorder *MockINotificationControllerMockRecorder
}

// MockINotificationControllerMockRecorder is the mock recorder for MockINotificationController.
type MockINotificationControllerMockRecorder struct {
	mock *MockINotificationController
}

// NewMockINotificationController creates a new mock instance.
func NewMockINotificationController(ctrl *gomock.Controller) *MockINotificationController {
	mock := &MockINotificationController{ctrl: ctrl}
	mock.recorder = &MockINotificationControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINotificationController) EXPECT() *MockINotificationControllerMockRecorder {
	return m.recorder
}

// GetNotification mocks base method.
func (m *MockINotificationController) GetNotification(context *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetNotification", context)
}

// GetNotification indicates an expected call of GetNotification.
func (mr *MockINotificationControllerMockRecorder) GetNotification(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNotification", reflect.TypeOf((*MockINotificationController)(nil).GetNotification), context)
}

// RegisterRoutes mocks base method.
func (m *MockINotificationController) RegisterRoutes(routerGroup *gin.RouterGroup) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RegisterRoutes", routerGroup)
}

// RegisterRoutes indicates an expected call of RegisterRoutes.
func (mr *MockINotificationControllerMockRecorder) RegisterRoutes(routerGroup interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterRoutes", reflect.TypeOf((*MockINotificationController)(nil).RegisterRoutes), routerGroup)
}
